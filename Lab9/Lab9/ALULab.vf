////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ALULab.vf
// /___/   /\     Timestamp : 11/13/2021 16:20:04
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/work/Digital/Lab/Lab9/Lab9/ALULab.vf -w C:/work/Digital/Lab/Lab9/Lab9/ALULab.sch
//Design Name: ALULab
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module BRLSHFT8_HXILINX_ALULab(O0, O1, O2, O3, O4, O5, O6, O7, I0, I1, I2, I3, I4, I5, I6, I7, S0, S1, S2) ;
   
   output             O0;
   output             O1;
   output             O2;
   output             O3;
   output             O4;
   output             O5;
   output             O6;
   output             O7;

   input              I0;
   input              I1;
   input              I2;
   input              I3;
   input              I4;
   input              I5;
   input              I6;
   input              I7;
   input              S0;
   input              S1;
   input              S2;
   
   reg                O0;
   reg                O1;
   reg                O2;
   reg                O3;
   reg                O4;
   reg                O5;
   reg                O6;
   reg                O7;
   
   always @(I0 or I1 or I2 or I3 or I4 or I5 or I6 or I7 or S0 or S1 or S2)
     begin
	case ({S2,S1,S0})

          3'b000 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I7, I6, I5, I4, I3, I2, I1, I0};
          3'b001 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I0, I7, I6, I5, I4, I3, I2, I1};
          3'b010 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I1, I0, I7, I6, I5, I4, I3, I2};
          3'b011 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I2, I1, I0, I7, I6, I5, I4, I3};
          3'b100 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I3, I2, I1, I0, I7, I6, I5, I4};
          3'b101 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I4, I3, I2, I1, I0, I7, I6, I5};
          3'b110 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I5, I4, I3, I2, I1, I0, I7, I6};
          3'b111 : {O7, O6, O5, O4, O3, O2, O1, O0} = {I6, I5, I4, I3, I2, I1, I0, I7};

        endcase
     end
   
   
endmodule
`timescale  100 ps / 10 ps

module ADSU8_HXILINX_ALULab (CO, OFL, S, A, ADD, B, CI);

   
   output             CO;
   output             OFL;
   output [7:0]       S;

   input  [7:0]       A;
   input  	      ADD;
   input  [7:0]       B;
   input              CI;

   reg    [8:0]       adsu_tmp;  

   always @ (A, ADD, B, CI) 
   begin
      if(ADD)
         adsu_tmp = A + B + CI;
      else
         adsu_tmp = A - (!CI) - B;
   end

   assign S   =  adsu_tmp[7:0];
   assign CO  =  ADD ? adsu_tmp[8] : ~adsu_tmp[8];
   assign OFL =  ADD ? ( (A[7] & B[7] & (~S[7])) | ((~A[7]) & (~B[7]) & S[7]) ) : ( (A[7] & (~B[7]) & (~S[7])) | ((~A[7]) & B[7] & S[7]) );

endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_ALULab (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_ALULab (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 1ns / 1ps

module selector_MUSER_ALULab(selec, 
                             start, 
                             sel0, 
                             sel1, 
                             sel2, 
                             sel3);

    input selec;
    input start;
   output sel0;
   output sel1;
   output sel2;
   output sel3;
   
   wire sel0_DUMMY;
   wire sel1_DUMMY;
   wire sel2_DUMMY;
   wire sel3_DUMMY;
   
   assign sel0 = sel0_DUMMY;
   assign sel1 = sel1_DUMMY;
   assign sel2 = sel2_DUMMY;
   assign sel3 = sel3_DUMMY;
   FDP  XLXI_2 (.C(selec), 
               .D(sel3_DUMMY), 
               .PRE(start), 
               .Q(sel0_DUMMY));
   FDC  XLXI_6 (.C(selec), 
               .CLR(start), 
               .D(sel0_DUMMY), 
               .Q(sel1_DUMMY));
   FDC  XLXI_7 (.C(selec), 
               .CLR(start), 
               .D(sel1_DUMMY), 
               .Q(sel2_DUMMY));
   FDC  XLXI_8 (.C(selec), 
               .CLR(start), 
               .D(sel2_DUMMY), 
               .Q(sel3_DUMMY));
endmodule
`timescale 1ns / 1ps

module ADDER_MUSER_ALULab(A, 
                          B, 
                          O);

    input [7:0] A;
    input [7:0] B;
   output [7:0] O;
   
   
   XOR2  XLXI_4 (.I0(B[2]), 
                .I1(A[2]), 
                .O(O[2]));
   XOR2  XLXI_5 (.I0(B[3]), 
                .I1(A[3]), 
                .O(O[3]));
   XOR2  XLXI_6 (.I0(B[4]), 
                .I1(A[4]), 
                .O(O[4]));
   XOR2  XLXI_7 (.I0(B[5]), 
                .I1(A[5]), 
                .O(O[5]));
   XOR2  XLXI_8 (.I0(B[6]), 
                .I1(A[6]), 
                .O(O[6]));
   XOR2  XLXI_9 (.I0(B[7]), 
                .I1(A[7]), 
                .O(O[7]));
   XOR2  XLXI_10 (.I0(B[1]), 
                 .I1(A[1]), 
                 .O(O[1]));
   XOR2  XLXI_11 (.I0(B[0]), 
                 .I1(A[0]), 
                 .O(O[0]));
endmodule
`timescale 1ns / 1ps

module DEMUX4to1_MUSER_ALULab(A, 
                              ADD, 
                              DIFFER, 
                              SHL, 
                              SUB, 
                              B, 
                              C, 
                              D, 
                              E);

    input [7:0] A;
    input ADD;
    input DIFFER;
    input SHL;
    input SUB;
   output [7:0] B;
   output [7:0] C;
   output [7:0] D;
   output [7:0] E;
   
   wire XLXN_156;
   wire XLXN_157;
   wire XLXN_159;
   wire XLXN_160;
   wire XLXN_193;
   wire XLXN_197;
   wire XLXN_199;
   
   INV  XLXI_1 (.I(ADD), 
               .O(XLXN_156));
   INV  XLXI_2 (.I(SUB), 
               .O(XLXN_157));
   INV  XLXI_3 (.I(DIFFER), 
               .O(XLXN_159));
   INV  XLXI_4 (.I(SHL), 
               .O(XLXN_160));
   AND4  XLXI_5 (.I0(XLXN_160), 
                .I1(XLXN_159), 
                .I2(XLXN_157), 
                .I3(ADD), 
                .O(XLXN_193));
   AND2  XLXI_6 (.I0(XLXN_193), 
                .I1(A[0]), 
                .O(B[0]));
   AND2  XLXI_7 (.I0(XLXN_193), 
                .I1(A[1]), 
                .O(B[1]));
   AND2  XLXI_8 (.I0(XLXN_193), 
                .I1(A[2]), 
                .O(B[2]));
   AND2  XLXI_9 (.I0(XLXN_193), 
                .I1(A[3]), 
                .O(B[3]));
   AND2  XLXI_10 (.I0(XLXN_193), 
                 .I1(A[4]), 
                 .O(B[4]));
   AND2  XLXI_11 (.I0(XLXN_193), 
                 .I1(A[5]), 
                 .O(B[5]));
   AND2  XLXI_12 (.I0(XLXN_193), 
                 .I1(A[6]), 
                 .O(B[6]));
   AND2  XLXI_13 (.I0(XLXN_193), 
                 .I1(A[7]), 
                 .O(B[7]));
   AND2  XLXI_67 (.I0(SUB), 
                 .I1(A[0]), 
                 .O(C[0]));
   AND2  XLXI_68 (.I0(SUB), 
                 .I1(A[1]), 
                 .O(C[1]));
   AND2  XLXI_69 (.I0(SUB), 
                 .I1(A[2]), 
                 .O(C[2]));
   AND2  XLXI_70 (.I0(SUB), 
                 .I1(A[3]), 
                 .O(C[3]));
   AND2  XLXI_71 (.I0(SUB), 
                 .I1(A[4]), 
                 .O(C[4]));
   AND2  XLXI_72 (.I0(SUB), 
                 .I1(A[5]), 
                 .O(C[5]));
   AND2  XLXI_73 (.I0(SUB), 
                 .I1(A[6]), 
                 .O(C[6]));
   AND2  XLXI_74 (.I0(SUB), 
                 .I1(A[7]), 
                 .O(C[7]));
   AND2  XLXI_115 (.I0(XLXN_197), 
                  .I1(A[0]), 
                  .O(D[0]));
   AND2  XLXI_116 (.I0(XLXN_197), 
                  .I1(A[1]), 
                  .O(D[1]));
   AND2  XLXI_117 (.I0(XLXN_197), 
                  .I1(A[2]), 
                  .O(D[2]));
   AND2  XLXI_118 (.I0(XLXN_197), 
                  .I1(A[3]), 
                  .O(D[3]));
   AND2  XLXI_119 (.I0(XLXN_197), 
                  .I1(A[4]), 
                  .O(D[4]));
   AND2  XLXI_120 (.I0(XLXN_197), 
                  .I1(A[5]), 
                  .O(D[5]));
   AND2  XLXI_121 (.I0(XLXN_197), 
                  .I1(A[6]), 
                  .O(D[6]));
   AND2  XLXI_122 (.I0(XLXN_197), 
                  .I1(A[7]), 
                  .O(D[7]));
   AND2  XLXI_123 (.I0(XLXN_199), 
                  .I1(A[0]), 
                  .O(E[0]));
   AND2  XLXI_124 (.I0(XLXN_199), 
                  .I1(A[1]), 
                  .O(E[1]));
   AND2  XLXI_125 (.I0(XLXN_199), 
                  .I1(A[2]), 
                  .O(E[2]));
   AND2  XLXI_126 (.I0(XLXN_199), 
                  .I1(A[3]), 
                  .O(E[3]));
   AND2  XLXI_127 (.I0(XLXN_199), 
                  .I1(A[4]), 
                  .O(E[4]));
   AND2  XLXI_128 (.I0(XLXN_199), 
                  .I1(A[5]), 
                  .O(E[5]));
   AND2  XLXI_129 (.I0(XLXN_199), 
                  .I1(A[6]), 
                  .O(E[6]));
   AND2  XLXI_130 (.I0(XLXN_199), 
                  .I1(A[7]), 
                  .O(E[7]));
   AND4  XLXI_132 (.I0(XLXN_160), 
                  .I1(DIFFER), 
                  .I2(XLXN_157), 
                  .I3(XLXN_156), 
                  .O(XLXN_197));
   AND4  XLXI_133 (.I0(SHL), 
                  .I1(XLXN_159), 
                  .I2(XLXN_157), 
                  .I3(XLXN_156), 
                  .O(XLXN_199));
endmodule
`timescale 1ns / 1ps

module Div10V2_MUSER_ALULab(CLKin, 
                            CLKout);

    input CLKin;
   output CLKout;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_18;
   wire CLKout_DUMMY;
   
   assign CLKout = CLKout_DUMMY;
   FDC  XLXI_3 (.C(CLKin), 
               .CLR(XLXN_18), 
               .D(XLXN_9), 
               .Q(XLXN_1));
   FDC  XLXI_4 (.C(XLXN_9), 
               .CLR(XLXN_18), 
               .D(XLXN_11), 
               .Q(XLXN_3));
   FDC  XLXI_5 (.C(XLXN_11), 
               .CLR(XLXN_18), 
               .D(XLXN_12), 
               .Q(XLXN_6));
   FDC  XLXI_6 (.C(XLXN_12), 
               .CLR(XLXN_18), 
               .D(CLKout_DUMMY), 
               .Q(XLXN_13));
   INV  XLXI_7 (.I(XLXN_1), 
               .O(XLXN_9));
   INV  XLXI_8 (.I(XLXN_3), 
               .O(XLXN_11));
   INV  XLXI_9 (.I(XLXN_6), 
               .O(XLXN_12));
   INV  XLXI_10 (.I(XLXN_13), 
                .O(CLKout_DUMMY));
   AND2  XLXI_11 (.I0(XLXN_3), 
                 .I1(XLXN_13), 
                 .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module Div100K_MUSER_ALULab(CLKin, 
                            CLKout);

    input CLKin;
   output CLKout;
   
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   
   Div10V2_MUSER_ALULab  XLXI_12 (.CLKin(CLKin), 
                                 .CLKout(XLXN_19));
   Div10V2_MUSER_ALULab  XLXI_13 (.CLKin(XLXN_19), 
                                 .CLKout(XLXN_20));
   Div10V2_MUSER_ALULab  XLXI_14 (.CLKin(XLXN_21), 
                                 .CLKout(XLXN_22));
   Div10V2_MUSER_ALULab  XLXI_15 (.CLKin(XLXN_22), 
                                 .CLKout(CLKout));
   Div10V2_MUSER_ALULab  XLXI_16 (.CLKin(XLXN_20), 
                                 .CLKout(XLXN_21));
endmodule
`timescale 1ns / 1ps

module display_MUSER_ALULab(CLK200Hz, 
                            Data0, 
                            Data1, 
                            Data2, 
                            Data3, 
                            Select0, 
                            Select1, 
                            Select2, 
                            Select3, 
                            Common, 
                            Output);

    input CLK200Hz;
    input [7:0] Data0;
    input [7:0] Data1;
    input [7:0] Data2;
    input [7:0] Data3;
    input Select0;
    input Select1;
    input Select2;
    input Select3;
   output [0:3] Common;
   output [0:3] Output;
   
   wire XLXN_38;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_79;
   wire XLXN_80;
   wire [0:3] Common_DUMMY;
   
   assign Common[0:3] = Common_DUMMY[0:3];
   (* HU_SET = "XLXI_5_0" *) 
   M4_1E_HXILINX_ALULab  XLXI_5 (.D0(Data0[0]), 
                                .D1(Data1[0]), 
                                .D2(Data2[0]), 
                                .D3(Data3[0]), 
                                .E(XLXN_38), 
                                .S0(XLXN_79), 
                                .S1(XLXN_80), 
                                .O(XLXN_69));
   (* HU_SET = "XLXI_6_1" *) 
   M4_1E_HXILINX_ALULab  XLXI_6 (.D0(Data0[1]), 
                                .D1(Data1[1]), 
                                .D2(Data2[1]), 
                                .D3(Data3[1]), 
                                .E(XLXN_38), 
                                .S0(XLXN_79), 
                                .S1(XLXN_80), 
                                .O(XLXN_70));
   (* HU_SET = "XLXI_7_2" *) 
   M4_1E_HXILINX_ALULab  XLXI_7 (.D0(Data0[2]), 
                                .D1(Data1[2]), 
                                .D2(Data2[2]), 
                                .D3(Data3[2]), 
                                .E(XLXN_38), 
                                .S0(XLXN_79), 
                                .S1(XLXN_80), 
                                .O(XLXN_71));
   (* HU_SET = "XLXI_8_3" *) 
   M4_1E_HXILINX_ALULab  XLXI_8 (.D0(Data0[3]), 
                                .D1(Data1[3]), 
                                .D2(Data2[3]), 
                                .D3(Data3[3]), 
                                .E(XLXN_38), 
                                .S0(XLXN_79), 
                                .S1(XLXN_80), 
                                .O(XLXN_72));
   (* HU_SET = "XLXI_9_4" *) 
   M4_1E_HXILINX_ALULab  XLXI_9 (.D0(Data0[4]), 
                                .D1(Data1[4]), 
                                .D2(Data2[4]), 
                                .D3(Data3[4]), 
                                .E(XLXN_38), 
                                .S0(XLXN_79), 
                                .S1(XLXN_80), 
                                .O(XLXN_73));
   (* HU_SET = "XLXI_10_5" *) 
   M4_1E_HXILINX_ALULab  XLXI_10 (.D0(Data0[5]), 
                                 .D1(Data1[5]), 
                                 .D2(Data2[5]), 
                                 .D3(Data3[5]), 
                                 .E(XLXN_38), 
                                 .S0(XLXN_79), 
                                 .S1(XLXN_80), 
                                 .O(XLXN_74));
   (* HU_SET = "XLXI_11_6" *) 
   M4_1E_HXILINX_ALULab  XLXI_11 (.D0(Data0[6]), 
                                 .D1(Data1[6]), 
                                 .D2(Data2[6]), 
                                 .D3(Data3[6]), 
                                 .E(XLXN_38), 
                                 .S0(XLXN_79), 
                                 .S1(XLXN_80), 
                                 .O(XLXN_75));
   (* HU_SET = "XLXI_12_7" *) 
   M4_1E_HXILINX_ALULab  XLXI_12 (.D0(Data0[7]), 
                                 .D1(Data1[7]), 
                                 .D2(Data2[7]), 
                                 .D3(Data3[7]), 
                                 .E(XLXN_38), 
                                 .S0(XLXN_79), 
                                 .S1(XLXN_80), 
                                 .O(XLXN_76));
   (* HU_SET = "XLXI_43_8" *) 
   M2_1_HXILINX_ALULab  XLXI_43 (.D0(XLXN_69), 
                                .D1(XLXN_73), 
                                .S0(CLK200Hz), 
                                .O(Output[0]));
   (* HU_SET = "XLXI_44_9" *) 
   M2_1_HXILINX_ALULab  XLXI_44 (.D0(XLXN_70), 
                                .D1(XLXN_74), 
                                .S0(CLK200Hz), 
                                .O(Output[1]));
   (* HU_SET = "XLXI_45_10" *) 
   M2_1_HXILINX_ALULab  XLXI_45 (.D0(XLXN_71), 
                                .D1(XLXN_75), 
                                .S0(CLK200Hz), 
                                .O(Output[2]));
   (* HU_SET = "XLXI_46_11" *) 
   M2_1_HXILINX_ALULab  XLXI_46 (.D0(XLXN_72), 
                                .D1(XLXN_76), 
                                .S0(CLK200Hz), 
                                .O(Output[3]));
   OR2  XLXI_51 (.I0(Select1), 
                .I1(Select3), 
                .O(XLXN_79));
   OR2  XLXI_52 (.I0(Select3), 
                .I1(Select2), 
                .O(XLXN_80));
   OR4  XLXI_53 (.I0(Select3), 
                .I1(Select2), 
                .I2(Select1), 
                .I3(Select0), 
                .O(XLXN_38));
   VCC  XLXI_66 (.P(Common_DUMMY[2]));
   VCC  XLXI_67 (.P(Common_DUMMY[3]));
   INV  XLXI_71 (.I(CLK200Hz), 
                .O(Common_DUMMY[1]));
   INV  XLXI_73 (.I(Common_DUMMY[1]), 
                .O(Common_DUMMY[0]));
endmodule
`timescale 1ns / 1ps

module ALULab(CLK, 
              InputA, 
              InputB, 
              selAdd, 
              selSub, 
              LEDtest, 
              L0, 
              L1, 
              L2, 
              L3, 
              segment, 
              XLXN_7);

    input CLK;
    input [7:0] InputA;
    input [7:0] InputB;
    input selAdd;
    input selSub;
   output LEDtest;
   output L0;
   output L1;
   output L2;
   output L3;
   output [0:6] segment;
   output [0:3] XLXN_7;
   
   wire [7:0] E;
   wire [7:0] O;
   wire [0:3] XLXN_5;
   wire XLXN_98;
   wire [7:0] XLXN_104;
   wire [7:0] XLXN_105;
   wire [7:0] XLXN_106;
   wire [7:0] XLXN_107;
   wire [7:0] XLXN_110;
   wire [7:0] XLXN_111;
   wire XLXN_127;
   wire XLXN_128;
   wire [7:0] XLXN_129;
   wire [7:0] XLXN_130;
   wire [7:0] XLXN_131;
   wire XLXN_174;
   wire L0_DUMMY;
   wire L1_DUMMY;
   wire L2_DUMMY;
   wire L3_DUMMY;
   
   assign L0 = L0_DUMMY;
   assign L1 = L1_DUMMY;
   assign L2 = L2_DUMMY;
   assign L3 = L3_DUMMY;
   DEMUX4to1_MUSER_ALULab  XLXI_1 (.A(InputA[7:0]), 
                                  .ADD(L0_DUMMY), 
                                  .DIFFER(L2_DUMMY), 
                                  .SHL(L3_DUMMY), 
                                  .SUB(L1_DUMMY), 
                                  .B(XLXN_104[7:0]), 
                                  .C(XLXN_105[7:0]), 
                                  .D(XLXN_129[7:0]), 
                                  .E(E[7:0]));
   display_MUSER_ALULab  XLXI_12 (.CLK200Hz(XLXN_174), 
                                 .Data0(XLXN_110[7:0]), 
                                 .Data1(XLXN_111[7:0]), 
                                 .Data2(XLXN_131[7:0]), 
                                 .Data3(O[7:0]), 
                                 .Select0(L0_DUMMY), 
                                 .Select1(L1_DUMMY), 
                                 .Select2(L2_DUMMY), 
                                 .Select3(L3_DUMMY), 
                                 .Common(XLXN_7[0:3]), 
                                 .Output(XLXN_5[0:3]));
   decodeTosegment  XLXI_13 (.Input(XLXN_5[0:3]), 
                            .Output(segment[0:6]));
   Div100K_MUSER_ALULab  XLXI_47 (.CLKin(CLK), 
                                 .CLKout(XLXN_174));
   DEMUX4to1_MUSER_ALULab  XLXI_48 (.A(InputB[7:0]), 
                                   .ADD(L0_DUMMY), 
                                   .DIFFER(L2_DUMMY), 
                                   .SHL(), 
                                   .SUB(L1_DUMMY), 
                                   .B(XLXN_106[7:0]), 
                                   .C(XLXN_107[7:0]), 
                                   .D(XLXN_130[7:0]), 
                                   .E());
   (* HU_SET = "XLXI_49_12" *) 
   ADSU8_HXILINX_ALULab  XLXI_49 (.A(XLXN_104[7:0]), 
                                 .ADD(XLXN_128), 
                                 .B(XLXN_106[7:0]), 
                                 .CI(XLXN_98), 
                                 .CO(), 
                                 .OFL(), 
                                 .S(XLXN_110[7:0]));
   (* HU_SET = "XLXI_50_13" *) 
   ADSU8_HXILINX_ALULab  XLXI_50 (.A(XLXN_105[7:0]), 
                                 .ADD(XLXN_127), 
                                 .B(XLXN_107[7:0]), 
                                 .CI(XLXN_128), 
                                 .CO(), 
                                 .OFL(), 
                                 .S(XLXN_111[7:0]));
   VCC  XLXI_51 (.P(XLXN_128));
   GND  XLXI_52 (.G(XLXN_127));
   GND  XLXI_53 (.G(LEDtest));
   GND  XLXI_54 (.G(XLXN_98));
   (* HU_SET = "XLXI_57_14" *) 
   BRLSHFT8_HXILINX_ALULab  XLXI_57 (.I0(E[7]), 
                                    .I1(E[6]), 
                                    .I2(E[5]), 
                                    .I3(E[4]), 
                                    .I4(E[3]), 
                                    .I5(E[2]), 
                                    .I6(E[1]), 
                                    .I7(E[0]), 
                                    .S0(L3_DUMMY), 
                                    .S1(), 
                                    .S2(), 
                                    .O0(O[7]), 
                                    .O1(O[6]), 
                                    .O2(O[5]), 
                                    .O3(O[4]), 
                                    .O4(O[3]), 
                                    .O5(O[2]), 
                                    .O6(O[1]), 
                                    .O7(O[0]));
   ADDER_MUSER_ALULab  XLXI_62 (.A(XLXN_129[7:0]), 
                               .B(XLXN_130[7:0]), 
                               .O(XLXN_131[7:0]));
   selector_MUSER_ALULab  XLXI_66 (.selec(selAdd), 
                                  .start(selSub), 
                                  .sel0(L0_DUMMY), 
                                  .sel1(L1_DUMMY), 
                                  .sel2(L2_DUMMY), 
                                  .sel3(L3_DUMMY));
endmodule
